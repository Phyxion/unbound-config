# CONFIGURATION FILE FOR UNBOUND RECURSIVE RESOLVER

# Settings and values have been derived in part by some suggested
# defaults in https://docs.pi-hole.net/guides/unbound/ in order to avoid
# some possible interoperability issues and also from the documentation
# found at https://nlnetlabs.nl/documentation/unbound/howto-optimise/ 
# specifically regarding optimising unbound

# Defaults assume a machine with 4 cpu threads and 1024MB total system RAM

# Values that should be adjusted are marked as such

# DEFINE SERVER
server:
    # LOG FILES
    # Note: Set verbosity to 0
    # There is no value to be had from high verbosity levels outside
    # of debugging scenarios
    verbosity: 0

    # CONNECTIVITY
    # Note: By default we will listen on port 5353 using tcp, udp, ipv4,
    # and ipv6 protocols
    # Adjust this to suit your system
    port: 5353
    do-ip4: yes
    do-ip6: yes
    do-tcp: yes
    do-udp: yes

    # BUFFERS
    # Note: Ensure that send and receive buffers are large enough to
    # prevent under-run even in extremely high client pressure
    # deployments
    # Additional memory used here is so minimal that it doesn't make
    # and sense not to do so
    so-rcvbuf: 8m
    so-sndbuf: 8m

    # CACHES
    # Note: Number of cache slabs available
    # *-cache-slabs == num-threads
    # Adjust this to suit your system
    msg-cache-slabs: 4
    rrset-cache-slabs: 4
    infra-cache-slabs: 4
    key-cache-slabs: 4
    # Note: Maximum cache allocation
    # Depending on the system RAM utililization of other services
    # you may be running this default should be fine for systems with
    # 1024MB total system RAM or greater
    # Systems with 512MB total system RAM will probably want to reduce
    # this by factor of 2
    # Systems with 256MB total system RAM or less will probably want
    # to reduce this by factor of 4 or 8
    # rrser-cache-size == msg-cache-size * 2
    # Adjust this to suit your system
    rrset-cache-size: 128m
    msg-cache-size: 64m

    # THREADS
    # Note: While one thread alone is perfectly sufficient we may as
    # well use as many threads as we have available to the instance
    # This is especially important if our unbound binary is configured
    # with libevent
    # Adjust this to suit your system
    num-threads: 4

    # ROOT HINTS
    # Note: Root hint path to allow undound to maintain list of primary
    # root servers
    root-hints: "/var/lib/unbound/root.hints"

    # CACHE PREFETCHING
    # Note: Prefetch cache entries that are close to their expiration
    prefetch: yes

    # DNSSEC
    # Note: Require DNSSEC validation for trust-anchored zones
    # Return BOGUS on failure of the requested validation
    harden-dnssec-stripped: yes
    # Note: Disable DNSSEC address capitalization randomization at present as
    # it has been reported to cause issues
    # see https://discourse.pi-hole.net/t/unbound-stubby-or-dnscrypt-proxy/9378$
    use-caps-for-id: no

    # GLUE RECORDS
    # Note: Only trust glue within the current server authority
    harden-glue: yes

    # EDNS
    # Note: Reduce EDNS buffer size to potentially limit fragmentation
    # reassembly problems
    edns-buffer-size: 1472

    # LIBEVENT
    # Note: The default outgoing range is limited by available file
    # descriptors increase the performance of unbound dramatically
    # by using libevent to allow for many more queries per thread
    # and larger outgoing range
    # This requires your unbound binary to be built with libevent
    # support, this is true of debian/raspbian stratch and buster
    # branches
    # If compiling your own unbound binary ensure to run ./configure
    # with '--with-libevent'
    # Adjust this to suit your system
    # outgoing-range == num-queries-per-thread * 2
    outgoing-range: 8192
    num-queries-per-thread: 4096

    # MULTI-THREADED UDP
    # Note: Increase UDP performance by a non-trivial degree by
    # enabling support for mutlti-threaded upd
    # Linux only
    # Adjust this to suit your system
    so-reuseport: yes

    # PRIVATE IP RANGES
    # Note: Define private local IP ranges
    private-address: 192.168.0.0/16
    private-address: 169.254.0.0/16
    private-address: 172.16.0.0/12
    private-address: 10.0.0.0/8
    private-address: fd00::/8
    private-address: fe80::/10
